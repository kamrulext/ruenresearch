quarto::quarto_render(input = ".")
install.packages('quarto')
quarto::quarto_render(input = ".")
quarto::quarto_render(input = ".")
quarto::quarto_render(input = ".")
quarto::quarto_render(input = ".")
quarto::quarto_render(input = ".")
# This is a comment
x <- 5  # Assigning a value to a variable x
3 -> y  # Another way to assign a value to y
z = 8 # Simple way of assigning a value to z
x # Print the value of x
y # Print the value of y
x + y  # Perform addition
x * y  # Perform multiplication
x / y  # Perform division
x^2  # Square of x
sqrt(x)  # Square root of x
x > y  # Check if x is greater than y
x == y  # Check if x is equal to y
x != y  # Check if x is not equal to y
y %/% x  # Integer division
y %% x  # Modulus operation
#| echo: true
# This is a comment
x <- 5  # Assigning a value to a variable x
3 -> y  # Another way to assign a value to y
z = 8 # Simple way of assigning a value to z
x # Print the value of x
y # Print the value of y
x + y  # Perform addition
x * y  # Perform multiplication
x / y  # Perform division
x^2  # Square of x
sqrt(x)  # Square root of x
x > y  # Check if x is greater than y
x == y  # Check if x is equal to y
x != y  # Check if x is not equal to y
y %/% x  # Integer division
y %% x  # Modulus operation
library(dplyr)
df %>%
filter(age > 28)  # Filter rows where age is greater than 28
#| echo: true
#| output-location: inline
library(dplyr)
df = data.frame(name=c("Alice", "Bob", "Charlie"),
age=c(25, 30, 35),
scores=c(90, 85, 88))
df %>%
filter(age > 28)  # Filter rows where age is greater than 28
df %>%
select(name, scores)  # Select specific columns
#| echo: false
#| output-location: fragment
library(dplyr)
df = data.frame(name=c("Alice", "Bob", "Charlie"),
age=c(25, 30, 35),
scores=c(90, 85, 88))
df %>%
filter(age > 28)  # Filter rows where age is greater than 28
df %>%
select(name, scores)  # Select specific columns
