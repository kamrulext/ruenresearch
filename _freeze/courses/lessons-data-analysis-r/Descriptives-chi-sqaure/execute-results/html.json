{
  "hash": "06866be223f85ee9edfcb9829b6aa1ce",
  "result": {
    "markdown": "---\ntitle: \"R markdown, Basic functions, Package (tidyverse) installation, Visualization using ggplot()\"\nauthor: \"Professor Dr. Md. Kamrul Hasan\"\nformat: html \n---\n\n\n# Reading data sets\n\nBefore reading a dataset from a folder we need to make sure the dataset is in the working directory.\nWe can set working directory using different methods:\n\n1.  Session \\> Set Working Directory …..\n\n2.  Typing command\n\n3.  Files tab in the Environment Pane\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = readxl::read_excel('DataSets.xlsx', sheet = 'wrangling', range = 'B7:N507')\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 13\n    sr.   jan   feb   mar   apr   may   jun   jul   aug   sep   oct   nov   dec\n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1     1     0     1     1     0     0     0     0     0     0     0     0     0\n2     2     0     1     1     1     0     0     0     0     0     0     0     0\n3     3     1     0     1     0     1     0     0     0     0     0     0     0\n4     4     0     0     1     1     0     1     0     0     1     0     0     0\n5     5     1     0     0     0     0     0     0     0     0     1     0     0\n6     6     0     1     0     0     0     0     0     0     0     0     0     0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntail(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 13\n    sr.   jan   feb   mar   apr   may   jun   jul   aug   sep   oct   nov   dec\n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1   495     0     1     0     1     0     0     1     0     0     0     0     0\n2   496     0     1     1     0     0     0     0     0     0     0     0     0\n3   497     1     0     1     1     1     0     0     0     0     0     0     0\n4   498     0     0     0     1     1     0     1     0     0     0     0     0\n5   499     1     0     0     0     0     0     0     0     0     0     0     1\n6   500     0     0     0     1     0     0     0     0     0     0     0     0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [500 × 13] (S3: tbl_df/tbl/data.frame)\n $ sr.: num [1:500] 1 2 3 4 5 6 7 8 9 10 ...\n $ jan: num [1:500] 0 0 1 0 1 0 0 0 1 0 ...\n $ feb: num [1:500] 1 1 0 0 0 1 1 0 0 0 ...\n $ mar: num [1:500] 1 1 1 1 0 0 0 0 1 1 ...\n $ apr: num [1:500] 0 1 0 1 0 0 1 0 0 1 ...\n $ may: num [1:500] 0 0 1 0 0 0 1 0 1 0 ...\n $ jun: num [1:500] 0 0 0 1 0 0 0 0 1 1 ...\n $ jul: num [1:500] 0 0 0 0 0 0 0 0 0 0 ...\n $ aug: num [1:500] 0 0 0 0 0 0 0 1 0 0 ...\n $ sep: num [1:500] 0 0 0 1 0 0 0 0 0 0 ...\n $ oct: num [1:500] 0 0 0 0 1 0 0 0 0 0 ...\n $ nov: num [1:500] 0 0 0 0 0 0 0 1 0 0 ...\n $ dec: num [1:500] 0 0 0 0 0 0 0 0 0 0 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      sr.             jan             feb             mar       \n Min.   :  1.0   Min.   :0.000   Min.   :0.000   Min.   :0.000  \n 1st Qu.:125.8   1st Qu.:0.000   1st Qu.:0.000   1st Qu.:0.000  \n Median :250.5   Median :0.000   Median :0.000   Median :0.000  \n Mean   :250.5   Mean   :0.286   Mean   :0.354   Mean   :0.392  \n 3rd Qu.:375.2   3rd Qu.:1.000   3rd Qu.:1.000   3rd Qu.:1.000  \n Max.   :500.0   Max.   :1.000   Max.   :1.000   Max.   :1.000  \n      apr             may             jun             jul            aug      \n Min.   :0.000   Min.   :0.000   Min.   :0.000   Min.   :0.00   Min.   :0.00  \n 1st Qu.:0.000   1st Qu.:0.000   1st Qu.:0.000   1st Qu.:0.00   1st Qu.:0.00  \n Median :0.000   Median :0.000   Median :0.000   Median :0.00   Median :0.00  \n Mean   :0.358   Mean   :0.224   Mean   :0.218   Mean   :0.18   Mean   :0.09  \n 3rd Qu.:1.000   3rd Qu.:0.000   3rd Qu.:0.000   3rd Qu.:0.00   3rd Qu.:0.00  \n Max.   :1.000   Max.   :1.000   Max.   :1.000   Max.   :1.00   Max.   :1.00  \n      sep             oct            nov             dec       \n Min.   :0.000   Min.   :0.00   Min.   :0.000   Min.   :0.000  \n 1st Qu.:0.000   1st Qu.:0.00   1st Qu.:0.000   1st Qu.:0.000  \n Median :0.000   Median :0.00   Median :0.000   Median :0.000  \n Mean   :0.082   Mean   :0.08   Mean   :0.076   Mean   :0.042  \n 3rd Qu.:0.000   3rd Qu.:0.00   3rd Qu.:0.000   3rd Qu.:0.000  \n Max.   :1.000   Max.   :1.00   Max.   :1.000   Max.   :1.000  \n```\n:::\n:::\n\n\nWe will subset the dataset by excluding the Sr. variable (1st variable)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata1 = data[ , -1] \nhead(data1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 12\n    jan   feb   mar   apr   may   jun   jul   aug   sep   oct   nov   dec\n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1     0     1     1     0     0     0     0     0     0     0     0     0\n2     0     1     1     1     0     0     0     0     0     0     0     0\n3     1     0     1     0     1     0     0     0     0     0     0     0\n4     0     0     1     1     0     1     0     0     1     0     0     0\n5     1     0     0     0     0     0     0     0     0     1     0     0\n6     0     1     0     0     0     0     0     0     0     0     0     0\n```\n:::\n:::\n\n\nCalculate the column frequencies (summation) using `colSums()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(data1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\njan feb mar apr may jun jul aug sep oct nov dec \n143 177 196 179 112 109  90  45  41  40  38  21 \n```\n:::\n:::\n\n\nCreate an object to store the value of summation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsums = as.data.frame(colSums(data1))\nstr(sums)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t12 obs. of  1 variable:\n $ colSums(data1): num  143 177 196 179 112 109 90 45 41 40 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrownames(sums)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"jan\" \"feb\" \"mar\" \"apr\" \"may\" \"jun\" \"jul\" \"aug\" \"sep\" \"oct\" \"nov\" \"dec\"\n```\n:::\n:::\n\n\nPiping operation: %\\>% (ctrl+shif+M).\nIt uses the previous output as an input for the next calculation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' was built under R version 4.5.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsums1 = sums %>% rownames_to_column('Months') \nsums1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Months colSums(data1)\n1     jan            143\n2     feb            177\n3     mar            196\n4     apr            179\n5     may            112\n6     jun            109\n7     jul             90\n8     aug             45\n9     sep             41\n10    oct             40\n11    nov             38\n12    dec             21\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsums2 = sums1 %>% rename(Frequency = `colSums(data1)`)\nsums2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Months Frequency\n1     jan       143\n2     feb       177\n3     mar       196\n4     apr       179\n5     may       112\n6     jun       109\n7     jul        90\n8     aug        45\n9     sep        41\n10    oct        40\n11    nov        38\n12    dec        21\n```\n:::\n:::\n\n\nChange order of the x-axis items\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsums2$Months = factor(sums2$Months, \n                      levels = c('jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec' ), \n                      labels = c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec' ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(sums2)+\n  aes(x = Months, y = Frequency, color = Months, fill = Months)+\n  geom_col()+\n  theme_bw()+\n  labs(title = 'Months of money shortage',\n       x = '',\n       y = 'Number of respondents')+\n  theme(legend.position = '')\n```\n\n::: {.cell-output-display}\n![](Descriptives-chi-sqaure_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave('My plot.png', dpi = 600, height = 4, width = 8, units = 'in')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshortage = as.data.frame(rowSums(data1))\nshort = shortage %>% rename(frequency = `rowSums(data1)`)\nstr(short)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t500 obs. of  1 variable:\n $ frequency: num  2 3 3 4 2 1 3 2 4 3 ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(short)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  frequency\n1         2\n2         3\n3         3\n4         4\n5         2\n6         1\n```\n:::\n:::\n\n\nSome descriptives of this frequency variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(short)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   frequency    \n Min.   :0.000  \n 1st Qu.:1.000  \n Median :2.000  \n Mean   :2.382  \n 3rd Qu.:3.000  \n Max.   :9.000  \n```\n:::\n:::\n\n\nTo see the frequency, we need categorical (factor) variable.\nConvert the numeric variable to factor variable.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshort$frequency = as.factor(short$frequency)\nsummary(short)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   frequency  \n 2      :141  \n 3      :113  \n 1      :110  \n 4      : 69  \n 0      : 34  \n 5      : 21  \n (Other): 12  \n```\n:::\n:::\n\n\n-   Categorize the respondents based on their number of months with money shortage:\n-   Two principles: Mutually exclusive, Completely exhaustive\n-   Low = up to 3 months of money shortage\n-   Medium = 4 to 5 months of money shortage\n-   High = \\>5 months of money shortage\n-   For categorization we need numeric (continuous or discrete) variables.\n-   Right = TRUE, means right value closed, right value is included in the category\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshort$frequency = as.numeric(short$frequency)\ncategory = cut(short$frequency, breaks = c(-Inf, 3, 5, Inf), \n    labels = c('Low', 'Medium', 'High'),\n    right = TRUE)\ntable(category)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncategory\n   Low Medium   High \n   285    182     33 \n```\n:::\n:::\n\n\ncalculate the percentage\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(category)*100/500\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncategory\n   Low Medium   High \n  57.0   36.4    6.6 \n```\n:::\n:::\n",
    "supporting": [
      "Descriptives-chi-sqaure_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}